plugins {
  id 'org.springframework.boot' version '2.4.0'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  //querydsl 추가
  id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
  // asciidoctor convert
  id "org.asciidoctor.convert" version "1.5.3"
  id 'java'

  // jacoco
  id 'jacoco'
}

group = 'com.selldok'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
  querydsl.extendsFrom compileClasspath
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'com.h2database:h2'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  implementation 'org.springframework.boot:spring-boot-starter-validation'

  //querydsl 추가
  implementation 'com.querydsl:querydsl-jpa'
  implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

  // MyBatis
  compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'
  compile 'org.springframework.boot:spring-boot-starter-jdbc'
  compile 'mysql:mysql-connector-java'

  // https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1
  compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'

  // spring security
  implementation 'org.springframework.boot:spring-boot-starter-security'

  // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
  compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.3.4'

  // https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity4
  compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'

  asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'  // 추가
  testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'  // 추가

  // Swagger 2
  compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
  compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'

  // https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload
  compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'
// https://mvnrepository.com/artifact/commons-io/commons-io
  compile group: 'commons-io', name: 'commons-io', version: '2.6'


}

jacoco {
  // JaCoCo 버전
  toolVersion = '0.8.5'

//  테스트결과 리포트를 저장할 경로 변경
//  default는 "${project.reporting.baseDir}/jacoco"
//  reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
  reports {
    // 원하는 리포트를 켜고 끌 수 있습니다.
    html.enabled true
    xml.enabled false
    csv.enabled false

//  각 리포트 타입 마다 리포트 저장 경로를 설정할 수 있습니다.
//  html.destination file("$buildDir/jacocoHtml")
//  xml.destination file("$buildDir/jacoco.xml")
  }
}

jacocoTestCoverageVerification {
  // 이 커버리지 기준은 이 글의 맨 아래에서 다시 설명하겠습니다.
  violationRules {
    rule {
      element = 'CLASS'

      limit {
        counter = 'BRANCH'
        value = 'COVEREDRATIO'
        minimum = 0.90
      }
    }
  }
}

ext {
  snippetsDir = file('build/generated-snippets')
}

test {
  outputs.dir snippetsDir
  useJUnitPlatform()
  jacoco {
    destinationFile = file("$buildDir/jacoco/jacoco.exec")
  }
}

asciidoctor {
  inputs.dir snippetsDir
  dependsOn test
}

bootJar {
  dependsOn asciidoctor
  from ("${asciidoctor.outputDir}/html5") {
    into 'static/docs'
  }
}

//querydsl 추가
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
  jpa = true
  querydslSourcesDir = querydslDir
}
sourceSets {
  main.java.srcDir querydslDir
}
compileQuerydsl {
  options.annotationProcessorPath = configurations.querydsl
}

/*
* gradle compileQuerydsl 시 AppliedHistoryService.java 에서 import 한 ~employee.entity.BasicInfo.BasicInfoBuilder 를 찾지 못하는 문제 발생하여 아래 추가
* 참고 https://nhn-commerce.github.io/java/Lombok-CustomBuilder(%EC%9E%91%EC%84%B1%EC%A4%91)/#
*/
project.afterEvaluate {
  project.tasks.compileQuerydsl.options.compilerArgs = [
    "-proc:only",
    "-processor", project.querydsl.processors() + ',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
  ]
}
